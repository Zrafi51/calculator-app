{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PCS\\\\Desktop\\\\calculator-app\\\\reactlab\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputRef = useRef(null); // Reference for the input field\n  const resultRef = useRef(null); // Reference for the result display\n  const [result, setResult] = useState(0); // State to store the current result\n\n  // Function for addition\n  function plus(e) {\n    e.preventDefault();\n    setResult(result => result + Number(inputRef.current.value));\n  }\n\n  // Function for subtraction\n  function minus(e) {\n    e.preventDefault();\n    setResult(result => result - Number(inputRef.current.value));\n  }\n\n  // Function for multiplication\n  function times(e) {\n    e.preventDefault();\n    setResult(result => result * Number(inputRef.current.value));\n  }\n\n  // Function for division\n  function divide(e) {\n    e.preventDefault();\n    const value = Number(inputRef.current.value);\n    if (value === 0) {\n      alert(\"Cannot divide by zero!\");\n      return;\n    }\n    setResult(result => result / value);\n  }\n\n  // Function to reset the input field\n  function resetInput(e) {\n    e.preventDefault();\n    inputRef.current.value = \"\";\n  }\n\n  // Function to reset the result\n  function resetResult(e) {\n    e.preventDefault();\n    setResult(0);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Simplest Working Calculator \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: resultRef,\n        children: [\"Current Total: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\" \", result, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        pattern: \"[0-9]\",\n        ref: inputRef,\n        type: \"number\",\n        placeholder: \"Type a number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: plus,\n        children: \" add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: minus,\n        children: \" subtract \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 52\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: times,\n        children: \" multiply \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 58\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: divide,\n        children: \" divide \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 58\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetInput,\n        children: \" reset input \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 57\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetResult,\n        children: \" reset result \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 66\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 14\n  }, this);\n}\n_s(App, \"iMUG+fAB4x2aPXzcLfNNNKt0TI8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","App","_s","inputRef","resultRef","result","setResult","plus","e","preventDefault","Number","current","value","minus","times","divide","alert","resetInput","resetResult","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","pattern","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PCS/Desktop/calculator-app/reactlab/src/App.js"],"sourcesContent":["import { useState, useRef } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n    const inputRef = useRef(null); // Reference for the input field\r\n    const resultRef = useRef(null); // Reference for the result display\r\n    const [result, setResult] = useState(0); // State to store the current result\r\n\r\n    // Function for addition\r\n    function plus(e) {\r\n        e.preventDefault();\r\n        setResult((result) => result + Number(inputRef.current.value));\r\n    }\r\n\r\n    // Function for subtraction\r\n    function minus(e) {\r\n        e.preventDefault();\r\n        setResult((result) => result - Number(inputRef.current.value));\r\n    }\r\n\r\n    // Function for multiplication\r\n    function times(e) {\r\n        e.preventDefault();\r\n        setResult((result) => result * Number(inputRef.current.value));\r\n    }\r\n\r\n    // Function for division\r\n    function divide(e) {\r\n        e.preventDefault();\r\n        const value = Number(inputRef.current.value);\r\n        if (value === 0) {\r\n            alert(\"Cannot divide by zero!\");\r\n            return;\r\n        }\r\n        setResult((result) => result / value);\r\n    }\r\n\r\n    // Function to reset the input field\r\n    function resetInput(e) {\r\n        e.preventDefault();\r\n        inputRef.current.value = \"\";\r\n    }\r\n\r\n    // Function to reset the result\r\n    function resetResult(e) {\r\n        e.preventDefault();\r\n        setResult(0);\r\n    }\r\n\r\n    return ( <\r\n        div className = \"App\" >\r\n        <\r\n        div >\r\n        <\r\n        h1 > Simplest Working Calculator < /h1> <\r\n        /div> <\r\n        form >\r\n        <\r\n        p ref = { resultRef } >\r\n        Current Total: < strong > { result } < /strong> <\r\n        /p> <\r\n        input pattern = \"[0-9]\"\r\n        ref = { inputRef }\r\n        type = \"number\"\r\n        placeholder = \"Type a number\" /\r\n        >\r\n        <\r\n        button onClick = { plus } > add < /button> <\r\n        button onClick = { minus } > subtract < /button> <\r\n        button onClick = { times } > multiply < /button> <\r\n        button onClick = { divide } > divide < /button> <\r\n        button onClick = { resetInput } > reset input < /button> <\r\n        button onClick = { resetResult } > reset result < /button> <\r\n        /form> <\r\n        /div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}